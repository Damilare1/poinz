const renderDocu = ({commandHandlerFileData, eventList}) =>
  `
# Poinz Command and Event Docu
This is an autogenerated docu. ${new Date()}

## Commands

${commandHandlerFileData
  .map((cmdInfo) => `* [${cmdInfo.commandName}](#${cmdInfo.commandName})`)
  .join('\n')}

${commandHandlerFileData.map(singleCommandHandlerInfoToMarkdown).join('\n')}

## Events

${eventList.map((evtInfo) => `* [${evtInfo.eventName}](#${evtInfo.eventName})`).join('\n')}

${eventList.map(singleEventToMarkdown).join('\n')}
 `;

const singleEventToMarkdown = (e) => {
  const anchor = `<a name="${e.eventName}"></a>`;
  const cmdList = e.byCommands.map((cmd) => `**[${cmd}](#${cmd})**`).join(', ');

  return `
### Event "${e.eventName}" ${anchor}

Source: [${e.relativeFilePath}](${e.relativeFilePath})

Produced by: ${cmdList}

Description

\`\`\`text
${e.description || ''}
\`\`\`

   `;
};

const singleCommandHandlerInfoToMarkdown = (commandHandlerInfo) => {
  const anchor = `<a name="${commandHandlerInfo.commandName}"></a>`;
  return `
### Command "${commandHandlerInfo.commandName}" ${anchor}

Source: [${commandHandlerInfo.relativeFilePath}](${commandHandlerInfo.relativeFilePath})

Description

\`\`\`text
${commandHandlerInfo.description}
\`\`\`

Produces: ${commandHandlerInfo.events.map((e) => `**[${e}](#${e})**`).join(',')}

Schema

\`\`\`json
${JSON.stringify(commandHandlerInfo.schema, null, 4)}
\`\`\`
 `;
};

module.exports = renderDocu;
